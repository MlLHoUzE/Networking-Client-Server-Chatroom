// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Headers.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "Headers.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace headers {

namespace {

const ::google::protobuf::Descriptor* CreateAccount_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CreateAccount_reflection_ = NULL;
const ::google::protobuf::Descriptor* CreateAccountSuccess_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CreateAccountSuccess_reflection_ = NULL;
const ::google::protobuf::Descriptor* CreateAccountFailure_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CreateAccountFailure_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* CreateAccountFailure_reason_descriptor_ = NULL;
const ::google::protobuf::Descriptor* AuthenticateLogin_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AuthenticateLogin_reflection_ = NULL;
const ::google::protobuf::Descriptor* AuthenticateSuccess_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AuthenticateSuccess_reflection_ = NULL;
const ::google::protobuf::Descriptor* AuthenticateFailure_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AuthenticateFailure_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* AuthenticateFailure_reason_descriptor_ = NULL;
const ::google::protobuf::Descriptor* Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Container_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Container_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* Container_requestID_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_Headers_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_Headers_2eproto() {
  protobuf_AddDesc_Headers_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "Headers.proto");
  GOOGLE_CHECK(file != NULL);
  CreateAccount_descriptor_ = file->message_type(0);
  static const int CreateAccount_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateAccount, username_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateAccount, password_),
  };
  CreateAccount_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CreateAccount_descriptor_,
      CreateAccount::internal_default_instance(),
      CreateAccount_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateAccount, _has_bits_),
      -1,
      -1,
      sizeof(CreateAccount),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateAccount, _internal_metadata_));
  CreateAccountSuccess_descriptor_ = file->message_type(1);
  static const int CreateAccountSuccess_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateAccountSuccess, userid_),
  };
  CreateAccountSuccess_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CreateAccountSuccess_descriptor_,
      CreateAccountSuccess::internal_default_instance(),
      CreateAccountSuccess_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateAccountSuccess, _has_bits_),
      -1,
      -1,
      sizeof(CreateAccountSuccess),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateAccountSuccess, _internal_metadata_));
  CreateAccountFailure_descriptor_ = file->message_type(2);
  static const int CreateAccountFailure_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateAccountFailure, errorreason_),
  };
  CreateAccountFailure_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CreateAccountFailure_descriptor_,
      CreateAccountFailure::internal_default_instance(),
      CreateAccountFailure_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateAccountFailure, _has_bits_),
      -1,
      -1,
      sizeof(CreateAccountFailure),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateAccountFailure, _internal_metadata_));
  CreateAccountFailure_reason_descriptor_ = CreateAccountFailure_descriptor_->enum_type(0);
  AuthenticateLogin_descriptor_ = file->message_type(3);
  static const int AuthenticateLogin_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AuthenticateLogin, username_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AuthenticateLogin, password_),
  };
  AuthenticateLogin_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      AuthenticateLogin_descriptor_,
      AuthenticateLogin::internal_default_instance(),
      AuthenticateLogin_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AuthenticateLogin, _has_bits_),
      -1,
      -1,
      sizeof(AuthenticateLogin),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AuthenticateLogin, _internal_metadata_));
  AuthenticateSuccess_descriptor_ = file->message_type(4);
  static const int AuthenticateSuccess_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AuthenticateSuccess, userid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AuthenticateSuccess, creationdate_),
  };
  AuthenticateSuccess_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      AuthenticateSuccess_descriptor_,
      AuthenticateSuccess::internal_default_instance(),
      AuthenticateSuccess_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AuthenticateSuccess, _has_bits_),
      -1,
      -1,
      sizeof(AuthenticateSuccess),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AuthenticateSuccess, _internal_metadata_));
  AuthenticateFailure_descriptor_ = file->message_type(5);
  static const int AuthenticateFailure_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AuthenticateFailure, errorreason_),
  };
  AuthenticateFailure_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      AuthenticateFailure_descriptor_,
      AuthenticateFailure::internal_default_instance(),
      AuthenticateFailure_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AuthenticateFailure, _has_bits_),
      -1,
      -1,
      sizeof(AuthenticateFailure),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AuthenticateFailure, _internal_metadata_));
  AuthenticateFailure_reason_descriptor_ = AuthenticateFailure_descriptor_->enum_type(0);
  Message_descriptor_ = file->message_type(6);
  static const int Message_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message, username_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message, roomname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message, message_),
  };
  Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Message_descriptor_,
      Message::internal_default_instance(),
      Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message, _has_bits_),
      -1,
      -1,
      sizeof(Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message, _internal_metadata_));
  Container_descriptor_ = file->message_type(7);
  static const int Container_offsets_[9] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Container, packetlength_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Container, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Container, message_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Container, create_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Container, createfail_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Container, createsuccess_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Container, auth_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Container, authfail_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Container, authsuccess_),
  };
  Container_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Container_descriptor_,
      Container::internal_default_instance(),
      Container_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Container, _has_bits_),
      -1,
      -1,
      sizeof(Container),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Container, _internal_metadata_));
  Container_requestID_descriptor_ = Container_descriptor_->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_Headers_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CreateAccount_descriptor_, CreateAccount::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CreateAccountSuccess_descriptor_, CreateAccountSuccess::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CreateAccountFailure_descriptor_, CreateAccountFailure::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      AuthenticateLogin_descriptor_, AuthenticateLogin::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      AuthenticateSuccess_descriptor_, AuthenticateSuccess::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      AuthenticateFailure_descriptor_, AuthenticateFailure::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Message_descriptor_, Message::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Container_descriptor_, Container::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_Headers_2eproto() {
  CreateAccount_default_instance_.Shutdown();
  delete CreateAccount_reflection_;
  CreateAccountSuccess_default_instance_.Shutdown();
  delete CreateAccountSuccess_reflection_;
  CreateAccountFailure_default_instance_.Shutdown();
  delete CreateAccountFailure_reflection_;
  AuthenticateLogin_default_instance_.Shutdown();
  delete AuthenticateLogin_reflection_;
  AuthenticateSuccess_default_instance_.Shutdown();
  delete AuthenticateSuccess_reflection_;
  AuthenticateFailure_default_instance_.Shutdown();
  delete AuthenticateFailure_reflection_;
  Message_default_instance_.Shutdown();
  delete Message_reflection_;
  Container_default_instance_.Shutdown();
  delete Container_reflection_;
}

void protobuf_InitDefaults_Headers_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::GetEmptyString();
  CreateAccount_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  CreateAccountSuccess_default_instance_.DefaultConstruct();
  CreateAccountFailure_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  AuthenticateLogin_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  AuthenticateSuccess_default_instance_.DefaultConstruct();
  AuthenticateFailure_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  Message_default_instance_.DefaultConstruct();
  Container_default_instance_.DefaultConstruct();
  CreateAccount_default_instance_.get_mutable()->InitAsDefaultInstance();
  CreateAccountSuccess_default_instance_.get_mutable()->InitAsDefaultInstance();
  CreateAccountFailure_default_instance_.get_mutable()->InitAsDefaultInstance();
  AuthenticateLogin_default_instance_.get_mutable()->InitAsDefaultInstance();
  AuthenticateSuccess_default_instance_.get_mutable()->InitAsDefaultInstance();
  AuthenticateFailure_default_instance_.get_mutable()->InitAsDefaultInstance();
  Message_default_instance_.get_mutable()->InitAsDefaultInstance();
  Container_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_Headers_2eproto_once_);
void protobuf_InitDefaults_Headers_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_Headers_2eproto_once_,
                 &protobuf_InitDefaults_Headers_2eproto_impl);
}
void protobuf_AddDesc_Headers_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_Headers_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\rHeaders.proto\022\007headers\"3\n\rCreateAccoun"
    "t\022\020\n\010userName\030\001 \002(\t\022\020\n\010password\030\002 \002(\t\"&\n"
    "\024CreateAccountSuccess\022\016\n\006userID\030\001 \002(\t\"\303\001"
    "\n\024CreateAccountFailure\0229\n\013errorReason\030\001 "
    "\002(\0162$.headers.CreateAccountFailure.reaso"
    "n\"p\n\006reason\022#\n\026ACCOUNT_ALREADY_EXISTS\020\350\237"
    "\377\377\377\377\377\377\377\001\022\035\n\020INVALID_PASSWORD\020\374\204\376\377\377\377\377\377\377\001\022"
    "\"\n\025INTERNAL_SERVER_ERROR\020\317\234\377\377\377\377\377\377\377\001\"7\n\021A"
    "uthenticateLogin\022\020\n\010userName\030\001 \002(\t\022\020\n\010pa"
    "ssword\030\002 \002(\t\";\n\023AuthenticateSuccess\022\016\n\006u"
    "serID\030\001 \002(\t\022\024\n\014creationDate\030\002 \002(\t\"\237\001\n\023Au"
    "thenticateFailure\0228\n\013errorReason\030\001 \002(\0162#"
    ".headers.AuthenticateFailure.reason\"N\n\006r"
    "eason\022 \n\023INVALID_CREDENTIALS\020\206\215\377\377\377\377\377\377\377\001\022"
    "\"\n\025INTERNAL_SERVER_ERROR\020\317\234\377\377\377\377\377\377\377\001\">\n\007M"
    "essage\022\020\n\010userName\030\001 \002(\t\022\020\n\010roomName\030\002 \002"
    "(\t\022\017\n\007message\030\003 \002(\t\"\230\005\n\tContainer\022\024\n\014pac"
    "ketLength\030\001 \002(\005\022(\n\002ID\030\002 \002(\0162\034.headers.Co"
    "ntainer.requestID\022!\n\007message\030\003 \001(\0132\020.hea"
    "ders.Message\022&\n\006create\030\004 \001(\0132\026.headers.C"
    "reateAccount\0221\n\ncreateFail\030\005 \001(\0132\035.heade"
    "rs.CreateAccountFailure\0224\n\rcreateSuccess"
    "\030\006 \001(\0132\035.headers.CreateAccountSuccess\022(\n"
    "\004auth\030\007 \001(\0132\032.headers.AuthenticateLogin\022"
    ".\n\010authFail\030\010 \001(\0132\034.headers.Authenticate"
    "Failure\0221\n\013authSuccess\030\t \001(\0132\034.headers.A"
    "uthenticateSuccess\"\211\002\n\trequestID\022\026\n\tID_C"
    "REATE\020\372\323\376\377\377\377\377\377\377\001\022\036\n\021ID_CREATE_SUCCESS\020\233\235"
    "\377\377\377\377\377\377\377\001\022\033\n\016ID_CREATE_FAIL\020\274\377\376\377\377\377\377\377\377\001\022$\n"
    "\027ID_AUTHENTICATE_SUCCESS\020\335\344\376\377\377\377\377\377\377\001\022$\n\027I"
    "D_AUTHENTICATE_FAILURE\020\323\204\377\377\377\377\377\377\377\001\022\025\n\010ID_"
    "LOGIN\020\247\241\377\377\377\377\377\377\377\001\022\024\n\007ID_JOIN\020\262\322\376\377\377\377\377\377\377\001\022\025"
    "\n\010ID_LEAVE\020\226\322\376\377\377\377\377\377\377\001\022\027\n\nID_MESSAGE\020\231\251\377\377"
    "\377\377\377\377\377\001", 1326);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "Headers.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_Headers_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_Headers_2eproto_once_);
void protobuf_AddDesc_Headers_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_Headers_2eproto_once_,
                 &protobuf_AddDesc_Headers_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_Headers_2eproto {
  StaticDescriptorInitializer_Headers_2eproto() {
    protobuf_AddDesc_Headers_2eproto();
  }
} static_descriptor_initializer_Headers_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateAccount::kUserNameFieldNumber;
const int CreateAccount::kPasswordFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateAccount::CreateAccount()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_Headers_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:headers.CreateAccount)
}

void CreateAccount::InitAsDefaultInstance() {
}

CreateAccount::CreateAccount(const CreateAccount& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:headers.CreateAccount)
}

void CreateAccount::SharedCtor() {
  _cached_size_ = 0;
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CreateAccount::~CreateAccount() {
  // @@protoc_insertion_point(destructor:headers.CreateAccount)
  SharedDtor();
}

void CreateAccount::SharedDtor() {
  username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CreateAccount::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CreateAccount::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CreateAccount_descriptor_;
}

const CreateAccount& CreateAccount::default_instance() {
  protobuf_InitDefaults_Headers_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<CreateAccount> CreateAccount_default_instance_;

CreateAccount* CreateAccount::New(::google::protobuf::Arena* arena) const {
  CreateAccount* n = new CreateAccount;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CreateAccount::Clear() {
// @@protoc_insertion_point(message_clear_start:headers.CreateAccount)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_username()) {
      username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_password()) {
      password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CreateAccount::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:headers.CreateAccount)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string userName = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_username()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->username().data(), this->username().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "headers.CreateAccount.userName");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_password;
        break;
      }

      // required string password = 2;
      case 2: {
        if (tag == 18) {
         parse_password:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_password()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->password().data(), this->password().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "headers.CreateAccount.password");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:headers.CreateAccount)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:headers.CreateAccount)
  return false;
#undef DO_
}

void CreateAccount::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:headers.CreateAccount)
  // required string userName = 1;
  if (has_username()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->username().data(), this->username().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "headers.CreateAccount.userName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->username(), output);
  }

  // required string password = 2;
  if (has_password()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "headers.CreateAccount.password");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->password(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:headers.CreateAccount)
}

::google::protobuf::uint8* CreateAccount::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:headers.CreateAccount)
  // required string userName = 1;
  if (has_username()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->username().data(), this->username().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "headers.CreateAccount.userName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->username(), target);
  }

  // required string password = 2;
  if (has_password()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "headers.CreateAccount.password");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->password(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:headers.CreateAccount)
  return target;
}

size_t CreateAccount::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:headers.CreateAccount)
  size_t total_size = 0;

  if (has_username()) {
    // required string userName = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->username());
  }

  if (has_password()) {
    // required string password = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->password());
  }

  return total_size;
}
size_t CreateAccount::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:headers.CreateAccount)
  size_t total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string userName = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->username());

    // required string password = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->password());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CreateAccount::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:headers.CreateAccount)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CreateAccount* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateAccount>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:headers.CreateAccount)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:headers.CreateAccount)
    UnsafeMergeFrom(*source);
  }
}

void CreateAccount::MergeFrom(const CreateAccount& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:headers.CreateAccount)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void CreateAccount::UnsafeMergeFrom(const CreateAccount& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_username()) {
      set_has_username();
      username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
    }
    if (from.has_password()) {
      set_has_password();
      password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void CreateAccount::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:headers.CreateAccount)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateAccount::CopyFrom(const CreateAccount& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:headers.CreateAccount)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool CreateAccount::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void CreateAccount::Swap(CreateAccount* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateAccount::InternalSwap(CreateAccount* other) {
  username_.Swap(&other->username_);
  password_.Swap(&other->password_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CreateAccount::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CreateAccount_descriptor_;
  metadata.reflection = CreateAccount_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CreateAccount

// required string userName = 1;
bool CreateAccount::has_username() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CreateAccount::set_has_username() {
  _has_bits_[0] |= 0x00000001u;
}
void CreateAccount::clear_has_username() {
  _has_bits_[0] &= ~0x00000001u;
}
void CreateAccount::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_username();
}
const ::std::string& CreateAccount::username() const {
  // @@protoc_insertion_point(field_get:headers.CreateAccount.userName)
  return username_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CreateAccount::set_username(const ::std::string& value) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:headers.CreateAccount.userName)
}
void CreateAccount::set_username(const char* value) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:headers.CreateAccount.userName)
}
void CreateAccount::set_username(const char* value, size_t size) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:headers.CreateAccount.userName)
}
::std::string* CreateAccount::mutable_username() {
  set_has_username();
  // @@protoc_insertion_point(field_mutable:headers.CreateAccount.userName)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CreateAccount::release_username() {
  // @@protoc_insertion_point(field_release:headers.CreateAccount.userName)
  clear_has_username();
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CreateAccount::set_allocated_username(::std::string* username) {
  if (username != NULL) {
    set_has_username();
  } else {
    clear_has_username();
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:headers.CreateAccount.userName)
}

// required string password = 2;
bool CreateAccount::has_password() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CreateAccount::set_has_password() {
  _has_bits_[0] |= 0x00000002u;
}
void CreateAccount::clear_has_password() {
  _has_bits_[0] &= ~0x00000002u;
}
void CreateAccount::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_password();
}
const ::std::string& CreateAccount::password() const {
  // @@protoc_insertion_point(field_get:headers.CreateAccount.password)
  return password_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CreateAccount::set_password(const ::std::string& value) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:headers.CreateAccount.password)
}
void CreateAccount::set_password(const char* value) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:headers.CreateAccount.password)
}
void CreateAccount::set_password(const char* value, size_t size) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:headers.CreateAccount.password)
}
::std::string* CreateAccount::mutable_password() {
  set_has_password();
  // @@protoc_insertion_point(field_mutable:headers.CreateAccount.password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CreateAccount::release_password() {
  // @@protoc_insertion_point(field_release:headers.CreateAccount.password)
  clear_has_password();
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CreateAccount::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    set_has_password();
  } else {
    clear_has_password();
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:headers.CreateAccount.password)
}

inline const CreateAccount* CreateAccount::internal_default_instance() {
  return &CreateAccount_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateAccountSuccess::kUserIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateAccountSuccess::CreateAccountSuccess()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_Headers_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:headers.CreateAccountSuccess)
}

void CreateAccountSuccess::InitAsDefaultInstance() {
}

CreateAccountSuccess::CreateAccountSuccess(const CreateAccountSuccess& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:headers.CreateAccountSuccess)
}

void CreateAccountSuccess::SharedCtor() {
  _cached_size_ = 0;
  userid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CreateAccountSuccess::~CreateAccountSuccess() {
  // @@protoc_insertion_point(destructor:headers.CreateAccountSuccess)
  SharedDtor();
}

void CreateAccountSuccess::SharedDtor() {
  userid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CreateAccountSuccess::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CreateAccountSuccess::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CreateAccountSuccess_descriptor_;
}

const CreateAccountSuccess& CreateAccountSuccess::default_instance() {
  protobuf_InitDefaults_Headers_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<CreateAccountSuccess> CreateAccountSuccess_default_instance_;

CreateAccountSuccess* CreateAccountSuccess::New(::google::protobuf::Arena* arena) const {
  CreateAccountSuccess* n = new CreateAccountSuccess;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CreateAccountSuccess::Clear() {
// @@protoc_insertion_point(message_clear_start:headers.CreateAccountSuccess)
  if (has_userid()) {
    userid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CreateAccountSuccess::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:headers.CreateAccountSuccess)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string userID = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_userid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->userid().data(), this->userid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "headers.CreateAccountSuccess.userID");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:headers.CreateAccountSuccess)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:headers.CreateAccountSuccess)
  return false;
#undef DO_
}

void CreateAccountSuccess::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:headers.CreateAccountSuccess)
  // required string userID = 1;
  if (has_userid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->userid().data(), this->userid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "headers.CreateAccountSuccess.userID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->userid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:headers.CreateAccountSuccess)
}

::google::protobuf::uint8* CreateAccountSuccess::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:headers.CreateAccountSuccess)
  // required string userID = 1;
  if (has_userid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->userid().data(), this->userid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "headers.CreateAccountSuccess.userID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->userid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:headers.CreateAccountSuccess)
  return target;
}

size_t CreateAccountSuccess::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:headers.CreateAccountSuccess)
  size_t total_size = 0;

  // required string userID = 1;
  if (has_userid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->userid());
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CreateAccountSuccess::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:headers.CreateAccountSuccess)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CreateAccountSuccess* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateAccountSuccess>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:headers.CreateAccountSuccess)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:headers.CreateAccountSuccess)
    UnsafeMergeFrom(*source);
  }
}

void CreateAccountSuccess::MergeFrom(const CreateAccountSuccess& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:headers.CreateAccountSuccess)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void CreateAccountSuccess::UnsafeMergeFrom(const CreateAccountSuccess& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_userid()) {
      set_has_userid();
      userid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.userid_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void CreateAccountSuccess::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:headers.CreateAccountSuccess)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateAccountSuccess::CopyFrom(const CreateAccountSuccess& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:headers.CreateAccountSuccess)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool CreateAccountSuccess::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void CreateAccountSuccess::Swap(CreateAccountSuccess* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateAccountSuccess::InternalSwap(CreateAccountSuccess* other) {
  userid_.Swap(&other->userid_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CreateAccountSuccess::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CreateAccountSuccess_descriptor_;
  metadata.reflection = CreateAccountSuccess_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CreateAccountSuccess

// required string userID = 1;
bool CreateAccountSuccess::has_userid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CreateAccountSuccess::set_has_userid() {
  _has_bits_[0] |= 0x00000001u;
}
void CreateAccountSuccess::clear_has_userid() {
  _has_bits_[0] &= ~0x00000001u;
}
void CreateAccountSuccess::clear_userid() {
  userid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_userid();
}
const ::std::string& CreateAccountSuccess::userid() const {
  // @@protoc_insertion_point(field_get:headers.CreateAccountSuccess.userID)
  return userid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CreateAccountSuccess::set_userid(const ::std::string& value) {
  set_has_userid();
  userid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:headers.CreateAccountSuccess.userID)
}
void CreateAccountSuccess::set_userid(const char* value) {
  set_has_userid();
  userid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:headers.CreateAccountSuccess.userID)
}
void CreateAccountSuccess::set_userid(const char* value, size_t size) {
  set_has_userid();
  userid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:headers.CreateAccountSuccess.userID)
}
::std::string* CreateAccountSuccess::mutable_userid() {
  set_has_userid();
  // @@protoc_insertion_point(field_mutable:headers.CreateAccountSuccess.userID)
  return userid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CreateAccountSuccess::release_userid() {
  // @@protoc_insertion_point(field_release:headers.CreateAccountSuccess.userID)
  clear_has_userid();
  return userid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CreateAccountSuccess::set_allocated_userid(::std::string* userid) {
  if (userid != NULL) {
    set_has_userid();
  } else {
    clear_has_userid();
  }
  userid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), userid);
  // @@protoc_insertion_point(field_set_allocated:headers.CreateAccountSuccess.userID)
}

inline const CreateAccountSuccess* CreateAccountSuccess::internal_default_instance() {
  return &CreateAccountSuccess_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

const ::google::protobuf::EnumDescriptor* CreateAccountFailure_reason_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CreateAccountFailure_reason_descriptor_;
}
bool CreateAccountFailure_reason_IsValid(int value) {
  switch (value) {
    case -32132:
    case -12721:
    case -12312:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const CreateAccountFailure_reason CreateAccountFailure::ACCOUNT_ALREADY_EXISTS;
const CreateAccountFailure_reason CreateAccountFailure::INVALID_PASSWORD;
const CreateAccountFailure_reason CreateAccountFailure::INTERNAL_SERVER_ERROR;
const CreateAccountFailure_reason CreateAccountFailure::reason_MIN;
const CreateAccountFailure_reason CreateAccountFailure::reason_MAX;
const int CreateAccountFailure::reason_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateAccountFailure::kErrorReasonFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateAccountFailure::CreateAccountFailure()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_Headers_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:headers.CreateAccountFailure)
}

void CreateAccountFailure::InitAsDefaultInstance() {
}

CreateAccountFailure::CreateAccountFailure(const CreateAccountFailure& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:headers.CreateAccountFailure)
}

void CreateAccountFailure::SharedCtor() {
  _cached_size_ = 0;
  errorreason_ = -12312;
}

CreateAccountFailure::~CreateAccountFailure() {
  // @@protoc_insertion_point(destructor:headers.CreateAccountFailure)
  SharedDtor();
}

void CreateAccountFailure::SharedDtor() {
}

void CreateAccountFailure::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CreateAccountFailure::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CreateAccountFailure_descriptor_;
}

const CreateAccountFailure& CreateAccountFailure::default_instance() {
  protobuf_InitDefaults_Headers_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<CreateAccountFailure> CreateAccountFailure_default_instance_;

CreateAccountFailure* CreateAccountFailure::New(::google::protobuf::Arena* arena) const {
  CreateAccountFailure* n = new CreateAccountFailure;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CreateAccountFailure::Clear() {
// @@protoc_insertion_point(message_clear_start:headers.CreateAccountFailure)
  errorreason_ = -12312;
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CreateAccountFailure::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:headers.CreateAccountFailure)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .headers.CreateAccountFailure.reason errorReason = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::headers::CreateAccountFailure_reason_IsValid(value)) {
            set_errorreason(static_cast< ::headers::CreateAccountFailure_reason >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:headers.CreateAccountFailure)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:headers.CreateAccountFailure)
  return false;
#undef DO_
}

void CreateAccountFailure::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:headers.CreateAccountFailure)
  // required .headers.CreateAccountFailure.reason errorReason = 1;
  if (has_errorreason()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->errorreason(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:headers.CreateAccountFailure)
}

::google::protobuf::uint8* CreateAccountFailure::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:headers.CreateAccountFailure)
  // required .headers.CreateAccountFailure.reason errorReason = 1;
  if (has_errorreason()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->errorreason(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:headers.CreateAccountFailure)
  return target;
}

size_t CreateAccountFailure::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:headers.CreateAccountFailure)
  size_t total_size = 0;

  // required .headers.CreateAccountFailure.reason errorReason = 1;
  if (has_errorreason()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->errorreason());
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CreateAccountFailure::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:headers.CreateAccountFailure)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CreateAccountFailure* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateAccountFailure>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:headers.CreateAccountFailure)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:headers.CreateAccountFailure)
    UnsafeMergeFrom(*source);
  }
}

void CreateAccountFailure::MergeFrom(const CreateAccountFailure& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:headers.CreateAccountFailure)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void CreateAccountFailure::UnsafeMergeFrom(const CreateAccountFailure& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_errorreason()) {
      set_errorreason(from.errorreason());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void CreateAccountFailure::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:headers.CreateAccountFailure)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateAccountFailure::CopyFrom(const CreateAccountFailure& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:headers.CreateAccountFailure)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool CreateAccountFailure::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void CreateAccountFailure::Swap(CreateAccountFailure* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateAccountFailure::InternalSwap(CreateAccountFailure* other) {
  std::swap(errorreason_, other->errorreason_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CreateAccountFailure::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CreateAccountFailure_descriptor_;
  metadata.reflection = CreateAccountFailure_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CreateAccountFailure

// required .headers.CreateAccountFailure.reason errorReason = 1;
bool CreateAccountFailure::has_errorreason() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CreateAccountFailure::set_has_errorreason() {
  _has_bits_[0] |= 0x00000001u;
}
void CreateAccountFailure::clear_has_errorreason() {
  _has_bits_[0] &= ~0x00000001u;
}
void CreateAccountFailure::clear_errorreason() {
  errorreason_ = -12312;
  clear_has_errorreason();
}
::headers::CreateAccountFailure_reason CreateAccountFailure::errorreason() const {
  // @@protoc_insertion_point(field_get:headers.CreateAccountFailure.errorReason)
  return static_cast< ::headers::CreateAccountFailure_reason >(errorreason_);
}
void CreateAccountFailure::set_errorreason(::headers::CreateAccountFailure_reason value) {
  assert(::headers::CreateAccountFailure_reason_IsValid(value));
  set_has_errorreason();
  errorreason_ = value;
  // @@protoc_insertion_point(field_set:headers.CreateAccountFailure.errorReason)
}

inline const CreateAccountFailure* CreateAccountFailure::internal_default_instance() {
  return &CreateAccountFailure_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AuthenticateLogin::kUserNameFieldNumber;
const int AuthenticateLogin::kPasswordFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AuthenticateLogin::AuthenticateLogin()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_Headers_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:headers.AuthenticateLogin)
}

void AuthenticateLogin::InitAsDefaultInstance() {
}

AuthenticateLogin::AuthenticateLogin(const AuthenticateLogin& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:headers.AuthenticateLogin)
}

void AuthenticateLogin::SharedCtor() {
  _cached_size_ = 0;
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

AuthenticateLogin::~AuthenticateLogin() {
  // @@protoc_insertion_point(destructor:headers.AuthenticateLogin)
  SharedDtor();
}

void AuthenticateLogin::SharedDtor() {
  username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AuthenticateLogin::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AuthenticateLogin::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AuthenticateLogin_descriptor_;
}

const AuthenticateLogin& AuthenticateLogin::default_instance() {
  protobuf_InitDefaults_Headers_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<AuthenticateLogin> AuthenticateLogin_default_instance_;

AuthenticateLogin* AuthenticateLogin::New(::google::protobuf::Arena* arena) const {
  AuthenticateLogin* n = new AuthenticateLogin;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AuthenticateLogin::Clear() {
// @@protoc_insertion_point(message_clear_start:headers.AuthenticateLogin)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_username()) {
      username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_password()) {
      password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool AuthenticateLogin::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:headers.AuthenticateLogin)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string userName = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_username()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->username().data(), this->username().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "headers.AuthenticateLogin.userName");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_password;
        break;
      }

      // required string password = 2;
      case 2: {
        if (tag == 18) {
         parse_password:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_password()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->password().data(), this->password().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "headers.AuthenticateLogin.password");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:headers.AuthenticateLogin)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:headers.AuthenticateLogin)
  return false;
#undef DO_
}

void AuthenticateLogin::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:headers.AuthenticateLogin)
  // required string userName = 1;
  if (has_username()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->username().data(), this->username().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "headers.AuthenticateLogin.userName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->username(), output);
  }

  // required string password = 2;
  if (has_password()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "headers.AuthenticateLogin.password");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->password(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:headers.AuthenticateLogin)
}

::google::protobuf::uint8* AuthenticateLogin::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:headers.AuthenticateLogin)
  // required string userName = 1;
  if (has_username()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->username().data(), this->username().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "headers.AuthenticateLogin.userName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->username(), target);
  }

  // required string password = 2;
  if (has_password()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "headers.AuthenticateLogin.password");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->password(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:headers.AuthenticateLogin)
  return target;
}

size_t AuthenticateLogin::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:headers.AuthenticateLogin)
  size_t total_size = 0;

  if (has_username()) {
    // required string userName = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->username());
  }

  if (has_password()) {
    // required string password = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->password());
  }

  return total_size;
}
size_t AuthenticateLogin::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:headers.AuthenticateLogin)
  size_t total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string userName = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->username());

    // required string password = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->password());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AuthenticateLogin::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:headers.AuthenticateLogin)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const AuthenticateLogin* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AuthenticateLogin>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:headers.AuthenticateLogin)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:headers.AuthenticateLogin)
    UnsafeMergeFrom(*source);
  }
}

void AuthenticateLogin::MergeFrom(const AuthenticateLogin& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:headers.AuthenticateLogin)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void AuthenticateLogin::UnsafeMergeFrom(const AuthenticateLogin& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_username()) {
      set_has_username();
      username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
    }
    if (from.has_password()) {
      set_has_password();
      password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void AuthenticateLogin::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:headers.AuthenticateLogin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AuthenticateLogin::CopyFrom(const AuthenticateLogin& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:headers.AuthenticateLogin)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool AuthenticateLogin::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void AuthenticateLogin::Swap(AuthenticateLogin* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AuthenticateLogin::InternalSwap(AuthenticateLogin* other) {
  username_.Swap(&other->username_);
  password_.Swap(&other->password_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AuthenticateLogin::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AuthenticateLogin_descriptor_;
  metadata.reflection = AuthenticateLogin_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AuthenticateLogin

// required string userName = 1;
bool AuthenticateLogin::has_username() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void AuthenticateLogin::set_has_username() {
  _has_bits_[0] |= 0x00000001u;
}
void AuthenticateLogin::clear_has_username() {
  _has_bits_[0] &= ~0x00000001u;
}
void AuthenticateLogin::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_username();
}
const ::std::string& AuthenticateLogin::username() const {
  // @@protoc_insertion_point(field_get:headers.AuthenticateLogin.userName)
  return username_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AuthenticateLogin::set_username(const ::std::string& value) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:headers.AuthenticateLogin.userName)
}
void AuthenticateLogin::set_username(const char* value) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:headers.AuthenticateLogin.userName)
}
void AuthenticateLogin::set_username(const char* value, size_t size) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:headers.AuthenticateLogin.userName)
}
::std::string* AuthenticateLogin::mutable_username() {
  set_has_username();
  // @@protoc_insertion_point(field_mutable:headers.AuthenticateLogin.userName)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AuthenticateLogin::release_username() {
  // @@protoc_insertion_point(field_release:headers.AuthenticateLogin.userName)
  clear_has_username();
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AuthenticateLogin::set_allocated_username(::std::string* username) {
  if (username != NULL) {
    set_has_username();
  } else {
    clear_has_username();
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:headers.AuthenticateLogin.userName)
}

// required string password = 2;
bool AuthenticateLogin::has_password() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void AuthenticateLogin::set_has_password() {
  _has_bits_[0] |= 0x00000002u;
}
void AuthenticateLogin::clear_has_password() {
  _has_bits_[0] &= ~0x00000002u;
}
void AuthenticateLogin::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_password();
}
const ::std::string& AuthenticateLogin::password() const {
  // @@protoc_insertion_point(field_get:headers.AuthenticateLogin.password)
  return password_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AuthenticateLogin::set_password(const ::std::string& value) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:headers.AuthenticateLogin.password)
}
void AuthenticateLogin::set_password(const char* value) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:headers.AuthenticateLogin.password)
}
void AuthenticateLogin::set_password(const char* value, size_t size) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:headers.AuthenticateLogin.password)
}
::std::string* AuthenticateLogin::mutable_password() {
  set_has_password();
  // @@protoc_insertion_point(field_mutable:headers.AuthenticateLogin.password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AuthenticateLogin::release_password() {
  // @@protoc_insertion_point(field_release:headers.AuthenticateLogin.password)
  clear_has_password();
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AuthenticateLogin::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    set_has_password();
  } else {
    clear_has_password();
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:headers.AuthenticateLogin.password)
}

inline const AuthenticateLogin* AuthenticateLogin::internal_default_instance() {
  return &AuthenticateLogin_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AuthenticateSuccess::kUserIDFieldNumber;
const int AuthenticateSuccess::kCreationDateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AuthenticateSuccess::AuthenticateSuccess()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_Headers_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:headers.AuthenticateSuccess)
}

void AuthenticateSuccess::InitAsDefaultInstance() {
}

AuthenticateSuccess::AuthenticateSuccess(const AuthenticateSuccess& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:headers.AuthenticateSuccess)
}

void AuthenticateSuccess::SharedCtor() {
  _cached_size_ = 0;
  userid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  creationdate_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

AuthenticateSuccess::~AuthenticateSuccess() {
  // @@protoc_insertion_point(destructor:headers.AuthenticateSuccess)
  SharedDtor();
}

void AuthenticateSuccess::SharedDtor() {
  userid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  creationdate_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AuthenticateSuccess::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AuthenticateSuccess::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AuthenticateSuccess_descriptor_;
}

const AuthenticateSuccess& AuthenticateSuccess::default_instance() {
  protobuf_InitDefaults_Headers_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<AuthenticateSuccess> AuthenticateSuccess_default_instance_;

AuthenticateSuccess* AuthenticateSuccess::New(::google::protobuf::Arena* arena) const {
  AuthenticateSuccess* n = new AuthenticateSuccess;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AuthenticateSuccess::Clear() {
// @@protoc_insertion_point(message_clear_start:headers.AuthenticateSuccess)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_userid()) {
      userid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_creationdate()) {
      creationdate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool AuthenticateSuccess::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:headers.AuthenticateSuccess)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string userID = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_userid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->userid().data(), this->userid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "headers.AuthenticateSuccess.userID");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_creationDate;
        break;
      }

      // required string creationDate = 2;
      case 2: {
        if (tag == 18) {
         parse_creationDate:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_creationdate()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->creationdate().data(), this->creationdate().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "headers.AuthenticateSuccess.creationDate");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:headers.AuthenticateSuccess)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:headers.AuthenticateSuccess)
  return false;
#undef DO_
}

void AuthenticateSuccess::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:headers.AuthenticateSuccess)
  // required string userID = 1;
  if (has_userid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->userid().data(), this->userid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "headers.AuthenticateSuccess.userID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->userid(), output);
  }

  // required string creationDate = 2;
  if (has_creationdate()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->creationdate().data(), this->creationdate().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "headers.AuthenticateSuccess.creationDate");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->creationdate(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:headers.AuthenticateSuccess)
}

::google::protobuf::uint8* AuthenticateSuccess::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:headers.AuthenticateSuccess)
  // required string userID = 1;
  if (has_userid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->userid().data(), this->userid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "headers.AuthenticateSuccess.userID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->userid(), target);
  }

  // required string creationDate = 2;
  if (has_creationdate()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->creationdate().data(), this->creationdate().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "headers.AuthenticateSuccess.creationDate");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->creationdate(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:headers.AuthenticateSuccess)
  return target;
}

size_t AuthenticateSuccess::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:headers.AuthenticateSuccess)
  size_t total_size = 0;

  if (has_userid()) {
    // required string userID = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->userid());
  }

  if (has_creationdate()) {
    // required string creationDate = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->creationdate());
  }

  return total_size;
}
size_t AuthenticateSuccess::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:headers.AuthenticateSuccess)
  size_t total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string userID = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->userid());

    // required string creationDate = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->creationdate());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AuthenticateSuccess::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:headers.AuthenticateSuccess)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const AuthenticateSuccess* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AuthenticateSuccess>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:headers.AuthenticateSuccess)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:headers.AuthenticateSuccess)
    UnsafeMergeFrom(*source);
  }
}

void AuthenticateSuccess::MergeFrom(const AuthenticateSuccess& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:headers.AuthenticateSuccess)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void AuthenticateSuccess::UnsafeMergeFrom(const AuthenticateSuccess& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_userid()) {
      set_has_userid();
      userid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.userid_);
    }
    if (from.has_creationdate()) {
      set_has_creationdate();
      creationdate_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.creationdate_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void AuthenticateSuccess::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:headers.AuthenticateSuccess)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AuthenticateSuccess::CopyFrom(const AuthenticateSuccess& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:headers.AuthenticateSuccess)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool AuthenticateSuccess::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void AuthenticateSuccess::Swap(AuthenticateSuccess* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AuthenticateSuccess::InternalSwap(AuthenticateSuccess* other) {
  userid_.Swap(&other->userid_);
  creationdate_.Swap(&other->creationdate_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AuthenticateSuccess::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AuthenticateSuccess_descriptor_;
  metadata.reflection = AuthenticateSuccess_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AuthenticateSuccess

// required string userID = 1;
bool AuthenticateSuccess::has_userid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void AuthenticateSuccess::set_has_userid() {
  _has_bits_[0] |= 0x00000001u;
}
void AuthenticateSuccess::clear_has_userid() {
  _has_bits_[0] &= ~0x00000001u;
}
void AuthenticateSuccess::clear_userid() {
  userid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_userid();
}
const ::std::string& AuthenticateSuccess::userid() const {
  // @@protoc_insertion_point(field_get:headers.AuthenticateSuccess.userID)
  return userid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AuthenticateSuccess::set_userid(const ::std::string& value) {
  set_has_userid();
  userid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:headers.AuthenticateSuccess.userID)
}
void AuthenticateSuccess::set_userid(const char* value) {
  set_has_userid();
  userid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:headers.AuthenticateSuccess.userID)
}
void AuthenticateSuccess::set_userid(const char* value, size_t size) {
  set_has_userid();
  userid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:headers.AuthenticateSuccess.userID)
}
::std::string* AuthenticateSuccess::mutable_userid() {
  set_has_userid();
  // @@protoc_insertion_point(field_mutable:headers.AuthenticateSuccess.userID)
  return userid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AuthenticateSuccess::release_userid() {
  // @@protoc_insertion_point(field_release:headers.AuthenticateSuccess.userID)
  clear_has_userid();
  return userid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AuthenticateSuccess::set_allocated_userid(::std::string* userid) {
  if (userid != NULL) {
    set_has_userid();
  } else {
    clear_has_userid();
  }
  userid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), userid);
  // @@protoc_insertion_point(field_set_allocated:headers.AuthenticateSuccess.userID)
}

// required string creationDate = 2;
bool AuthenticateSuccess::has_creationdate() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void AuthenticateSuccess::set_has_creationdate() {
  _has_bits_[0] |= 0x00000002u;
}
void AuthenticateSuccess::clear_has_creationdate() {
  _has_bits_[0] &= ~0x00000002u;
}
void AuthenticateSuccess::clear_creationdate() {
  creationdate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_creationdate();
}
const ::std::string& AuthenticateSuccess::creationdate() const {
  // @@protoc_insertion_point(field_get:headers.AuthenticateSuccess.creationDate)
  return creationdate_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AuthenticateSuccess::set_creationdate(const ::std::string& value) {
  set_has_creationdate();
  creationdate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:headers.AuthenticateSuccess.creationDate)
}
void AuthenticateSuccess::set_creationdate(const char* value) {
  set_has_creationdate();
  creationdate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:headers.AuthenticateSuccess.creationDate)
}
void AuthenticateSuccess::set_creationdate(const char* value, size_t size) {
  set_has_creationdate();
  creationdate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:headers.AuthenticateSuccess.creationDate)
}
::std::string* AuthenticateSuccess::mutable_creationdate() {
  set_has_creationdate();
  // @@protoc_insertion_point(field_mutable:headers.AuthenticateSuccess.creationDate)
  return creationdate_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AuthenticateSuccess::release_creationdate() {
  // @@protoc_insertion_point(field_release:headers.AuthenticateSuccess.creationDate)
  clear_has_creationdate();
  return creationdate_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AuthenticateSuccess::set_allocated_creationdate(::std::string* creationdate) {
  if (creationdate != NULL) {
    set_has_creationdate();
  } else {
    clear_has_creationdate();
  }
  creationdate_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), creationdate);
  // @@protoc_insertion_point(field_set_allocated:headers.AuthenticateSuccess.creationDate)
}

inline const AuthenticateSuccess* AuthenticateSuccess::internal_default_instance() {
  return &AuthenticateSuccess_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

const ::google::protobuf::EnumDescriptor* AuthenticateFailure_reason_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AuthenticateFailure_reason_descriptor_;
}
bool AuthenticateFailure_reason_IsValid(int value) {
  switch (value) {
    case -14714:
    case -12721:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const AuthenticateFailure_reason AuthenticateFailure::INVALID_CREDENTIALS;
const AuthenticateFailure_reason AuthenticateFailure::INTERNAL_SERVER_ERROR;
const AuthenticateFailure_reason AuthenticateFailure::reason_MIN;
const AuthenticateFailure_reason AuthenticateFailure::reason_MAX;
const int AuthenticateFailure::reason_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AuthenticateFailure::kErrorReasonFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AuthenticateFailure::AuthenticateFailure()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_Headers_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:headers.AuthenticateFailure)
}

void AuthenticateFailure::InitAsDefaultInstance() {
}

AuthenticateFailure::AuthenticateFailure(const AuthenticateFailure& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:headers.AuthenticateFailure)
}

void AuthenticateFailure::SharedCtor() {
  _cached_size_ = 0;
  errorreason_ = -14714;
}

AuthenticateFailure::~AuthenticateFailure() {
  // @@protoc_insertion_point(destructor:headers.AuthenticateFailure)
  SharedDtor();
}

void AuthenticateFailure::SharedDtor() {
}

void AuthenticateFailure::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AuthenticateFailure::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AuthenticateFailure_descriptor_;
}

const AuthenticateFailure& AuthenticateFailure::default_instance() {
  protobuf_InitDefaults_Headers_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<AuthenticateFailure> AuthenticateFailure_default_instance_;

AuthenticateFailure* AuthenticateFailure::New(::google::protobuf::Arena* arena) const {
  AuthenticateFailure* n = new AuthenticateFailure;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AuthenticateFailure::Clear() {
// @@protoc_insertion_point(message_clear_start:headers.AuthenticateFailure)
  errorreason_ = -14714;
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool AuthenticateFailure::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:headers.AuthenticateFailure)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .headers.AuthenticateFailure.reason errorReason = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::headers::AuthenticateFailure_reason_IsValid(value)) {
            set_errorreason(static_cast< ::headers::AuthenticateFailure_reason >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:headers.AuthenticateFailure)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:headers.AuthenticateFailure)
  return false;
#undef DO_
}

void AuthenticateFailure::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:headers.AuthenticateFailure)
  // required .headers.AuthenticateFailure.reason errorReason = 1;
  if (has_errorreason()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->errorreason(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:headers.AuthenticateFailure)
}

::google::protobuf::uint8* AuthenticateFailure::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:headers.AuthenticateFailure)
  // required .headers.AuthenticateFailure.reason errorReason = 1;
  if (has_errorreason()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->errorreason(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:headers.AuthenticateFailure)
  return target;
}

size_t AuthenticateFailure::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:headers.AuthenticateFailure)
  size_t total_size = 0;

  // required .headers.AuthenticateFailure.reason errorReason = 1;
  if (has_errorreason()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->errorreason());
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AuthenticateFailure::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:headers.AuthenticateFailure)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const AuthenticateFailure* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AuthenticateFailure>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:headers.AuthenticateFailure)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:headers.AuthenticateFailure)
    UnsafeMergeFrom(*source);
  }
}

void AuthenticateFailure::MergeFrom(const AuthenticateFailure& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:headers.AuthenticateFailure)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void AuthenticateFailure::UnsafeMergeFrom(const AuthenticateFailure& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_errorreason()) {
      set_errorreason(from.errorreason());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void AuthenticateFailure::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:headers.AuthenticateFailure)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AuthenticateFailure::CopyFrom(const AuthenticateFailure& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:headers.AuthenticateFailure)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool AuthenticateFailure::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void AuthenticateFailure::Swap(AuthenticateFailure* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AuthenticateFailure::InternalSwap(AuthenticateFailure* other) {
  std::swap(errorreason_, other->errorreason_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AuthenticateFailure::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AuthenticateFailure_descriptor_;
  metadata.reflection = AuthenticateFailure_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AuthenticateFailure

// required .headers.AuthenticateFailure.reason errorReason = 1;
bool AuthenticateFailure::has_errorreason() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void AuthenticateFailure::set_has_errorreason() {
  _has_bits_[0] |= 0x00000001u;
}
void AuthenticateFailure::clear_has_errorreason() {
  _has_bits_[0] &= ~0x00000001u;
}
void AuthenticateFailure::clear_errorreason() {
  errorreason_ = -14714;
  clear_has_errorreason();
}
::headers::AuthenticateFailure_reason AuthenticateFailure::errorreason() const {
  // @@protoc_insertion_point(field_get:headers.AuthenticateFailure.errorReason)
  return static_cast< ::headers::AuthenticateFailure_reason >(errorreason_);
}
void AuthenticateFailure::set_errorreason(::headers::AuthenticateFailure_reason value) {
  assert(::headers::AuthenticateFailure_reason_IsValid(value));
  set_has_errorreason();
  errorreason_ = value;
  // @@protoc_insertion_point(field_set:headers.AuthenticateFailure.errorReason)
}

inline const AuthenticateFailure* AuthenticateFailure::internal_default_instance() {
  return &AuthenticateFailure_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Message::kUserNameFieldNumber;
const int Message::kRoomNameFieldNumber;
const int Message::kMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Message::Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_Headers_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:headers.Message)
}

void Message::InitAsDefaultInstance() {
}

Message::Message(const Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:headers.Message)
}

void Message::SharedCtor() {
  _cached_size_ = 0;
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  roomname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Message::~Message() {
  // @@protoc_insertion_point(destructor:headers.Message)
  SharedDtor();
}

void Message::SharedDtor() {
  username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  roomname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Message_descriptor_;
}

const Message& Message::default_instance() {
  protobuf_InitDefaults_Headers_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<Message> Message_default_instance_;

Message* Message::New(::google::protobuf::Arena* arena) const {
  Message* n = new Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Message::Clear() {
// @@protoc_insertion_point(message_clear_start:headers.Message)
  if (_has_bits_[0 / 32] & 7u) {
    if (has_username()) {
      username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_roomname()) {
      roomname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_message()) {
      message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:headers.Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string userName = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_username()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->username().data(), this->username().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "headers.Message.userName");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_roomName;
        break;
      }

      // required string roomName = 2;
      case 2: {
        if (tag == 18) {
         parse_roomName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_roomname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->roomname().data(), this->roomname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "headers.Message.roomName");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_message;
        break;
      }

      // required string message = 3;
      case 3: {
        if (tag == 26) {
         parse_message:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->message().data(), this->message().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "headers.Message.message");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:headers.Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:headers.Message)
  return false;
#undef DO_
}

void Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:headers.Message)
  // required string userName = 1;
  if (has_username()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->username().data(), this->username().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "headers.Message.userName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->username(), output);
  }

  // required string roomName = 2;
  if (has_roomname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->roomname().data(), this->roomname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "headers.Message.roomName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->roomname(), output);
  }

  // required string message = 3;
  if (has_message()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->message().data(), this->message().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "headers.Message.message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->message(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:headers.Message)
}

::google::protobuf::uint8* Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:headers.Message)
  // required string userName = 1;
  if (has_username()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->username().data(), this->username().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "headers.Message.userName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->username(), target);
  }

  // required string roomName = 2;
  if (has_roomname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->roomname().data(), this->roomname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "headers.Message.roomName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->roomname(), target);
  }

  // required string message = 3;
  if (has_message()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->message().data(), this->message().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "headers.Message.message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->message(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:headers.Message)
  return target;
}

size_t Message::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:headers.Message)
  size_t total_size = 0;

  if (has_username()) {
    // required string userName = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->username());
  }

  if (has_roomname()) {
    // required string roomName = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->roomname());
  }

  if (has_message()) {
    // required string message = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message());
  }

  return total_size;
}
size_t Message::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:headers.Message)
  size_t total_size = 0;

  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required string userName = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->username());

    // required string roomName = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->roomname());

    // required string message = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:headers.Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Message* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:headers.Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:headers.Message)
    UnsafeMergeFrom(*source);
  }
}

void Message::MergeFrom(const Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:headers.Message)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void Message::UnsafeMergeFrom(const Message& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_username()) {
      set_has_username();
      username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
    }
    if (from.has_roomname()) {
      set_has_roomname();
      roomname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.roomname_);
    }
    if (from.has_message()) {
      set_has_message();
      message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:headers.Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Message::CopyFrom(const Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:headers.Message)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool Message::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void Message::Swap(Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Message::InternalSwap(Message* other) {
  username_.Swap(&other->username_);
  roomname_.Swap(&other->roomname_);
  message_.Swap(&other->message_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Message_descriptor_;
  metadata.reflection = Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Message

// required string userName = 1;
bool Message::has_username() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Message::set_has_username() {
  _has_bits_[0] |= 0x00000001u;
}
void Message::clear_has_username() {
  _has_bits_[0] &= ~0x00000001u;
}
void Message::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_username();
}
const ::std::string& Message::username() const {
  // @@protoc_insertion_point(field_get:headers.Message.userName)
  return username_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Message::set_username(const ::std::string& value) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:headers.Message.userName)
}
void Message::set_username(const char* value) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:headers.Message.userName)
}
void Message::set_username(const char* value, size_t size) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:headers.Message.userName)
}
::std::string* Message::mutable_username() {
  set_has_username();
  // @@protoc_insertion_point(field_mutable:headers.Message.userName)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Message::release_username() {
  // @@protoc_insertion_point(field_release:headers.Message.userName)
  clear_has_username();
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Message::set_allocated_username(::std::string* username) {
  if (username != NULL) {
    set_has_username();
  } else {
    clear_has_username();
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:headers.Message.userName)
}

// required string roomName = 2;
bool Message::has_roomname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Message::set_has_roomname() {
  _has_bits_[0] |= 0x00000002u;
}
void Message::clear_has_roomname() {
  _has_bits_[0] &= ~0x00000002u;
}
void Message::clear_roomname() {
  roomname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_roomname();
}
const ::std::string& Message::roomname() const {
  // @@protoc_insertion_point(field_get:headers.Message.roomName)
  return roomname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Message::set_roomname(const ::std::string& value) {
  set_has_roomname();
  roomname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:headers.Message.roomName)
}
void Message::set_roomname(const char* value) {
  set_has_roomname();
  roomname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:headers.Message.roomName)
}
void Message::set_roomname(const char* value, size_t size) {
  set_has_roomname();
  roomname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:headers.Message.roomName)
}
::std::string* Message::mutable_roomname() {
  set_has_roomname();
  // @@protoc_insertion_point(field_mutable:headers.Message.roomName)
  return roomname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Message::release_roomname() {
  // @@protoc_insertion_point(field_release:headers.Message.roomName)
  clear_has_roomname();
  return roomname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Message::set_allocated_roomname(::std::string* roomname) {
  if (roomname != NULL) {
    set_has_roomname();
  } else {
    clear_has_roomname();
  }
  roomname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), roomname);
  // @@protoc_insertion_point(field_set_allocated:headers.Message.roomName)
}

// required string message = 3;
bool Message::has_message() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void Message::set_has_message() {
  _has_bits_[0] |= 0x00000004u;
}
void Message::clear_has_message() {
  _has_bits_[0] &= ~0x00000004u;
}
void Message::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_message();
}
const ::std::string& Message::message() const {
  // @@protoc_insertion_point(field_get:headers.Message.message)
  return message_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Message::set_message(const ::std::string& value) {
  set_has_message();
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:headers.Message.message)
}
void Message::set_message(const char* value) {
  set_has_message();
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:headers.Message.message)
}
void Message::set_message(const char* value, size_t size) {
  set_has_message();
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:headers.Message.message)
}
::std::string* Message::mutable_message() {
  set_has_message();
  // @@protoc_insertion_point(field_mutable:headers.Message.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Message::release_message() {
  // @@protoc_insertion_point(field_release:headers.Message.message)
  clear_has_message();
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Message::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    set_has_message();
  } else {
    clear_has_message();
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:headers.Message.message)
}

inline const Message* Message::internal_default_instance() {
  return &Message_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

const ::google::protobuf::EnumDescriptor* Container_requestID_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Container_requestID_descriptor_;
}
bool Container_requestID_IsValid(int value) {
  switch (value) {
    case -22250:
    case -22222:
    case -22022:
    case -19875:
    case -16452:
    case -15789:
    case -12645:
    case -12121:
    case -11111:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Container_requestID Container::ID_CREATE;
const Container_requestID Container::ID_CREATE_SUCCESS;
const Container_requestID Container::ID_CREATE_FAIL;
const Container_requestID Container::ID_AUTHENTICATE_SUCCESS;
const Container_requestID Container::ID_AUTHENTICATE_FAILURE;
const Container_requestID Container::ID_LOGIN;
const Container_requestID Container::ID_JOIN;
const Container_requestID Container::ID_LEAVE;
const Container_requestID Container::ID_MESSAGE;
const Container_requestID Container::requestID_MIN;
const Container_requestID Container::requestID_MAX;
const int Container::requestID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Container::kPacketLengthFieldNumber;
const int Container::kIDFieldNumber;
const int Container::kMessageFieldNumber;
const int Container::kCreateFieldNumber;
const int Container::kCreateFailFieldNumber;
const int Container::kCreateSuccessFieldNumber;
const int Container::kAuthFieldNumber;
const int Container::kAuthFailFieldNumber;
const int Container::kAuthSuccessFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Container::Container()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_Headers_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:headers.Container)
}

void Container::InitAsDefaultInstance() {
  message_ = const_cast< ::headers::Message*>(
      ::headers::Message::internal_default_instance());
  create_ = const_cast< ::headers::CreateAccount*>(
      ::headers::CreateAccount::internal_default_instance());
  createfail_ = const_cast< ::headers::CreateAccountFailure*>(
      ::headers::CreateAccountFailure::internal_default_instance());
  createsuccess_ = const_cast< ::headers::CreateAccountSuccess*>(
      ::headers::CreateAccountSuccess::internal_default_instance());
  auth_ = const_cast< ::headers::AuthenticateLogin*>(
      ::headers::AuthenticateLogin::internal_default_instance());
  authfail_ = const_cast< ::headers::AuthenticateFailure*>(
      ::headers::AuthenticateFailure::internal_default_instance());
  authsuccess_ = const_cast< ::headers::AuthenticateSuccess*>(
      ::headers::AuthenticateSuccess::internal_default_instance());
}

Container::Container(const Container& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:headers.Container)
}

void Container::SharedCtor() {
  _cached_size_ = 0;
  message_ = NULL;
  create_ = NULL;
  createfail_ = NULL;
  createsuccess_ = NULL;
  auth_ = NULL;
  authfail_ = NULL;
  authsuccess_ = NULL;
  packetlength_ = 0;
  id_ = -22022;
}

Container::~Container() {
  // @@protoc_insertion_point(destructor:headers.Container)
  SharedDtor();
}

void Container::SharedDtor() {
  if (this != &Container_default_instance_.get()) {
    delete message_;
    delete create_;
    delete createfail_;
    delete createsuccess_;
    delete auth_;
    delete authfail_;
    delete authsuccess_;
  }
}

void Container::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Container::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Container_descriptor_;
}

const Container& Container::default_instance() {
  protobuf_InitDefaults_Headers_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<Container> Container_default_instance_;

Container* Container::New(::google::protobuf::Arena* arena) const {
  Container* n = new Container;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Container::Clear() {
// @@protoc_insertion_point(message_clear_start:headers.Container)
  if (_has_bits_[0 / 32] & 255u) {
    packetlength_ = 0;
    id_ = -22022;
    if (has_message()) {
      if (message_ != NULL) message_->::headers::Message::Clear();
    }
    if (has_create()) {
      if (create_ != NULL) create_->::headers::CreateAccount::Clear();
    }
    if (has_createfail()) {
      if (createfail_ != NULL) createfail_->::headers::CreateAccountFailure::Clear();
    }
    if (has_createsuccess()) {
      if (createsuccess_ != NULL) createsuccess_->::headers::CreateAccountSuccess::Clear();
    }
    if (has_auth()) {
      if (auth_ != NULL) auth_->::headers::AuthenticateLogin::Clear();
    }
    if (has_authfail()) {
      if (authfail_ != NULL) authfail_->::headers::AuthenticateFailure::Clear();
    }
  }
  if (has_authsuccess()) {
    if (authsuccess_ != NULL) authsuccess_->::headers::AuthenticateSuccess::Clear();
  }
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Container::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:headers.Container)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 packetLength = 1;
      case 1: {
        if (tag == 8) {
          set_has_packetlength();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &packetlength_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_ID;
        break;
      }

      // required .headers.Container.requestID ID = 2;
      case 2: {
        if (tag == 16) {
         parse_ID:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::headers::Container_requestID_IsValid(value)) {
            set_id(static_cast< ::headers::Container_requestID >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_message;
        break;
      }

      // optional .headers.Message message = 3;
      case 3: {
        if (tag == 26) {
         parse_message:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_message()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_create;
        break;
      }

      // optional .headers.CreateAccount create = 4;
      case 4: {
        if (tag == 34) {
         parse_create:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_create()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_createFail;
        break;
      }

      // optional .headers.CreateAccountFailure createFail = 5;
      case 5: {
        if (tag == 42) {
         parse_createFail:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_createfail()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_createSuccess;
        break;
      }

      // optional .headers.CreateAccountSuccess createSuccess = 6;
      case 6: {
        if (tag == 50) {
         parse_createSuccess:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_createsuccess()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_auth;
        break;
      }

      // optional .headers.AuthenticateLogin auth = 7;
      case 7: {
        if (tag == 58) {
         parse_auth:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_auth()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_authFail;
        break;
      }

      // optional .headers.AuthenticateFailure authFail = 8;
      case 8: {
        if (tag == 66) {
         parse_authFail:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_authfail()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_authSuccess;
        break;
      }

      // optional .headers.AuthenticateSuccess authSuccess = 9;
      case 9: {
        if (tag == 74) {
         parse_authSuccess:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_authsuccess()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:headers.Container)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:headers.Container)
  return false;
#undef DO_
}

void Container::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:headers.Container)
  // required int32 packetLength = 1;
  if (has_packetlength()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->packetlength(), output);
  }

  // required .headers.Container.requestID ID = 2;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->id(), output);
  }

  // optional .headers.Message message = 3;
  if (has_message()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->message_, output);
  }

  // optional .headers.CreateAccount create = 4;
  if (has_create()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->create_, output);
  }

  // optional .headers.CreateAccountFailure createFail = 5;
  if (has_createfail()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->createfail_, output);
  }

  // optional .headers.CreateAccountSuccess createSuccess = 6;
  if (has_createsuccess()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->createsuccess_, output);
  }

  // optional .headers.AuthenticateLogin auth = 7;
  if (has_auth()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *this->auth_, output);
  }

  // optional .headers.AuthenticateFailure authFail = 8;
  if (has_authfail()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, *this->authfail_, output);
  }

  // optional .headers.AuthenticateSuccess authSuccess = 9;
  if (has_authsuccess()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, *this->authsuccess_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:headers.Container)
}

::google::protobuf::uint8* Container::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:headers.Container)
  // required int32 packetLength = 1;
  if (has_packetlength()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->packetlength(), target);
  }

  // required .headers.Container.requestID ID = 2;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->id(), target);
  }

  // optional .headers.Message message = 3;
  if (has_message()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->message_, false, target);
  }

  // optional .headers.CreateAccount create = 4;
  if (has_create()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->create_, false, target);
  }

  // optional .headers.CreateAccountFailure createFail = 5;
  if (has_createfail()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *this->createfail_, false, target);
  }

  // optional .headers.CreateAccountSuccess createSuccess = 6;
  if (has_createsuccess()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, *this->createsuccess_, false, target);
  }

  // optional .headers.AuthenticateLogin auth = 7;
  if (has_auth()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        7, *this->auth_, false, target);
  }

  // optional .headers.AuthenticateFailure authFail = 8;
  if (has_authfail()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        8, *this->authfail_, false, target);
  }

  // optional .headers.AuthenticateSuccess authSuccess = 9;
  if (has_authsuccess()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        9, *this->authsuccess_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:headers.Container)
  return target;
}

size_t Container::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:headers.Container)
  size_t total_size = 0;

  if (has_packetlength()) {
    // required int32 packetLength = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->packetlength());
  }

  if (has_id()) {
    // required .headers.Container.requestID ID = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->id());
  }

  return total_size;
}
size_t Container::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:headers.Container)
  size_t total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int32 packetLength = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->packetlength());

    // required .headers.Container.requestID ID = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->id());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_has_bits_[2 / 32] & 252u) {
    // optional .headers.Message message = 3;
    if (has_message()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->message_);
    }

    // optional .headers.CreateAccount create = 4;
    if (has_create()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->create_);
    }

    // optional .headers.CreateAccountFailure createFail = 5;
    if (has_createfail()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->createfail_);
    }

    // optional .headers.CreateAccountSuccess createSuccess = 6;
    if (has_createsuccess()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->createsuccess_);
    }

    // optional .headers.AuthenticateLogin auth = 7;
    if (has_auth()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->auth_);
    }

    // optional .headers.AuthenticateFailure authFail = 8;
    if (has_authfail()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->authfail_);
    }

  }
  // optional .headers.AuthenticateSuccess authSuccess = 9;
  if (has_authsuccess()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->authsuccess_);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Container::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:headers.Container)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Container* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Container>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:headers.Container)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:headers.Container)
    UnsafeMergeFrom(*source);
  }
}

void Container::MergeFrom(const Container& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:headers.Container)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void Container::UnsafeMergeFrom(const Container& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_packetlength()) {
      set_packetlength(from.packetlength());
    }
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_message()) {
      mutable_message()->::headers::Message::MergeFrom(from.message());
    }
    if (from.has_create()) {
      mutable_create()->::headers::CreateAccount::MergeFrom(from.create());
    }
    if (from.has_createfail()) {
      mutable_createfail()->::headers::CreateAccountFailure::MergeFrom(from.createfail());
    }
    if (from.has_createsuccess()) {
      mutable_createsuccess()->::headers::CreateAccountSuccess::MergeFrom(from.createsuccess());
    }
    if (from.has_auth()) {
      mutable_auth()->::headers::AuthenticateLogin::MergeFrom(from.auth());
    }
    if (from.has_authfail()) {
      mutable_authfail()->::headers::AuthenticateFailure::MergeFrom(from.authfail());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_authsuccess()) {
      mutable_authsuccess()->::headers::AuthenticateSuccess::MergeFrom(from.authsuccess());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void Container::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:headers.Container)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Container::CopyFrom(const Container& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:headers.Container)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool Container::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  if (has_message()) {
    if (!this->message_->IsInitialized()) return false;
  }
  if (has_create()) {
    if (!this->create_->IsInitialized()) return false;
  }
  if (has_createfail()) {
    if (!this->createfail_->IsInitialized()) return false;
  }
  if (has_createsuccess()) {
    if (!this->createsuccess_->IsInitialized()) return false;
  }
  if (has_auth()) {
    if (!this->auth_->IsInitialized()) return false;
  }
  if (has_authfail()) {
    if (!this->authfail_->IsInitialized()) return false;
  }
  if (has_authsuccess()) {
    if (!this->authsuccess_->IsInitialized()) return false;
  }
  return true;
}

void Container::Swap(Container* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Container::InternalSwap(Container* other) {
  std::swap(packetlength_, other->packetlength_);
  std::swap(id_, other->id_);
  std::swap(message_, other->message_);
  std::swap(create_, other->create_);
  std::swap(createfail_, other->createfail_);
  std::swap(createsuccess_, other->createsuccess_);
  std::swap(auth_, other->auth_);
  std::swap(authfail_, other->authfail_);
  std::swap(authsuccess_, other->authsuccess_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Container::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Container_descriptor_;
  metadata.reflection = Container_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Container

// required int32 packetLength = 1;
bool Container::has_packetlength() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Container::set_has_packetlength() {
  _has_bits_[0] |= 0x00000001u;
}
void Container::clear_has_packetlength() {
  _has_bits_[0] &= ~0x00000001u;
}
void Container::clear_packetlength() {
  packetlength_ = 0;
  clear_has_packetlength();
}
::google::protobuf::int32 Container::packetlength() const {
  // @@protoc_insertion_point(field_get:headers.Container.packetLength)
  return packetlength_;
}
void Container::set_packetlength(::google::protobuf::int32 value) {
  set_has_packetlength();
  packetlength_ = value;
  // @@protoc_insertion_point(field_set:headers.Container.packetLength)
}

// required .headers.Container.requestID ID = 2;
bool Container::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Container::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
void Container::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
void Container::clear_id() {
  id_ = -22022;
  clear_has_id();
}
::headers::Container_requestID Container::id() const {
  // @@protoc_insertion_point(field_get:headers.Container.ID)
  return static_cast< ::headers::Container_requestID >(id_);
}
void Container::set_id(::headers::Container_requestID value) {
  assert(::headers::Container_requestID_IsValid(value));
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:headers.Container.ID)
}

// optional .headers.Message message = 3;
bool Container::has_message() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void Container::set_has_message() {
  _has_bits_[0] |= 0x00000004u;
}
void Container::clear_has_message() {
  _has_bits_[0] &= ~0x00000004u;
}
void Container::clear_message() {
  if (message_ != NULL) message_->::headers::Message::Clear();
  clear_has_message();
}
const ::headers::Message& Container::message() const {
  // @@protoc_insertion_point(field_get:headers.Container.message)
  return message_ != NULL ? *message_
                         : *::headers::Message::internal_default_instance();
}
::headers::Message* Container::mutable_message() {
  set_has_message();
  if (message_ == NULL) {
    message_ = new ::headers::Message;
  }
  // @@protoc_insertion_point(field_mutable:headers.Container.message)
  return message_;
}
::headers::Message* Container::release_message() {
  // @@protoc_insertion_point(field_release:headers.Container.message)
  clear_has_message();
  ::headers::Message* temp = message_;
  message_ = NULL;
  return temp;
}
void Container::set_allocated_message(::headers::Message* message) {
  delete message_;
  message_ = message;
  if (message) {
    set_has_message();
  } else {
    clear_has_message();
  }
  // @@protoc_insertion_point(field_set_allocated:headers.Container.message)
}

// optional .headers.CreateAccount create = 4;
bool Container::has_create() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void Container::set_has_create() {
  _has_bits_[0] |= 0x00000008u;
}
void Container::clear_has_create() {
  _has_bits_[0] &= ~0x00000008u;
}
void Container::clear_create() {
  if (create_ != NULL) create_->::headers::CreateAccount::Clear();
  clear_has_create();
}
const ::headers::CreateAccount& Container::create() const {
  // @@protoc_insertion_point(field_get:headers.Container.create)
  return create_ != NULL ? *create_
                         : *::headers::CreateAccount::internal_default_instance();
}
::headers::CreateAccount* Container::mutable_create() {
  set_has_create();
  if (create_ == NULL) {
    create_ = new ::headers::CreateAccount;
  }
  // @@protoc_insertion_point(field_mutable:headers.Container.create)
  return create_;
}
::headers::CreateAccount* Container::release_create() {
  // @@protoc_insertion_point(field_release:headers.Container.create)
  clear_has_create();
  ::headers::CreateAccount* temp = create_;
  create_ = NULL;
  return temp;
}
void Container::set_allocated_create(::headers::CreateAccount* create) {
  delete create_;
  create_ = create;
  if (create) {
    set_has_create();
  } else {
    clear_has_create();
  }
  // @@protoc_insertion_point(field_set_allocated:headers.Container.create)
}

// optional .headers.CreateAccountFailure createFail = 5;
bool Container::has_createfail() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void Container::set_has_createfail() {
  _has_bits_[0] |= 0x00000010u;
}
void Container::clear_has_createfail() {
  _has_bits_[0] &= ~0x00000010u;
}
void Container::clear_createfail() {
  if (createfail_ != NULL) createfail_->::headers::CreateAccountFailure::Clear();
  clear_has_createfail();
}
const ::headers::CreateAccountFailure& Container::createfail() const {
  // @@protoc_insertion_point(field_get:headers.Container.createFail)
  return createfail_ != NULL ? *createfail_
                         : *::headers::CreateAccountFailure::internal_default_instance();
}
::headers::CreateAccountFailure* Container::mutable_createfail() {
  set_has_createfail();
  if (createfail_ == NULL) {
    createfail_ = new ::headers::CreateAccountFailure;
  }
  // @@protoc_insertion_point(field_mutable:headers.Container.createFail)
  return createfail_;
}
::headers::CreateAccountFailure* Container::release_createfail() {
  // @@protoc_insertion_point(field_release:headers.Container.createFail)
  clear_has_createfail();
  ::headers::CreateAccountFailure* temp = createfail_;
  createfail_ = NULL;
  return temp;
}
void Container::set_allocated_createfail(::headers::CreateAccountFailure* createfail) {
  delete createfail_;
  createfail_ = createfail;
  if (createfail) {
    set_has_createfail();
  } else {
    clear_has_createfail();
  }
  // @@protoc_insertion_point(field_set_allocated:headers.Container.createFail)
}

// optional .headers.CreateAccountSuccess createSuccess = 6;
bool Container::has_createsuccess() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void Container::set_has_createsuccess() {
  _has_bits_[0] |= 0x00000020u;
}
void Container::clear_has_createsuccess() {
  _has_bits_[0] &= ~0x00000020u;
}
void Container::clear_createsuccess() {
  if (createsuccess_ != NULL) createsuccess_->::headers::CreateAccountSuccess::Clear();
  clear_has_createsuccess();
}
const ::headers::CreateAccountSuccess& Container::createsuccess() const {
  // @@protoc_insertion_point(field_get:headers.Container.createSuccess)
  return createsuccess_ != NULL ? *createsuccess_
                         : *::headers::CreateAccountSuccess::internal_default_instance();
}
::headers::CreateAccountSuccess* Container::mutable_createsuccess() {
  set_has_createsuccess();
  if (createsuccess_ == NULL) {
    createsuccess_ = new ::headers::CreateAccountSuccess;
  }
  // @@protoc_insertion_point(field_mutable:headers.Container.createSuccess)
  return createsuccess_;
}
::headers::CreateAccountSuccess* Container::release_createsuccess() {
  // @@protoc_insertion_point(field_release:headers.Container.createSuccess)
  clear_has_createsuccess();
  ::headers::CreateAccountSuccess* temp = createsuccess_;
  createsuccess_ = NULL;
  return temp;
}
void Container::set_allocated_createsuccess(::headers::CreateAccountSuccess* createsuccess) {
  delete createsuccess_;
  createsuccess_ = createsuccess;
  if (createsuccess) {
    set_has_createsuccess();
  } else {
    clear_has_createsuccess();
  }
  // @@protoc_insertion_point(field_set_allocated:headers.Container.createSuccess)
}

// optional .headers.AuthenticateLogin auth = 7;
bool Container::has_auth() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void Container::set_has_auth() {
  _has_bits_[0] |= 0x00000040u;
}
void Container::clear_has_auth() {
  _has_bits_[0] &= ~0x00000040u;
}
void Container::clear_auth() {
  if (auth_ != NULL) auth_->::headers::AuthenticateLogin::Clear();
  clear_has_auth();
}
const ::headers::AuthenticateLogin& Container::auth() const {
  // @@protoc_insertion_point(field_get:headers.Container.auth)
  return auth_ != NULL ? *auth_
                         : *::headers::AuthenticateLogin::internal_default_instance();
}
::headers::AuthenticateLogin* Container::mutable_auth() {
  set_has_auth();
  if (auth_ == NULL) {
    auth_ = new ::headers::AuthenticateLogin;
  }
  // @@protoc_insertion_point(field_mutable:headers.Container.auth)
  return auth_;
}
::headers::AuthenticateLogin* Container::release_auth() {
  // @@protoc_insertion_point(field_release:headers.Container.auth)
  clear_has_auth();
  ::headers::AuthenticateLogin* temp = auth_;
  auth_ = NULL;
  return temp;
}
void Container::set_allocated_auth(::headers::AuthenticateLogin* auth) {
  delete auth_;
  auth_ = auth;
  if (auth) {
    set_has_auth();
  } else {
    clear_has_auth();
  }
  // @@protoc_insertion_point(field_set_allocated:headers.Container.auth)
}

// optional .headers.AuthenticateFailure authFail = 8;
bool Container::has_authfail() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void Container::set_has_authfail() {
  _has_bits_[0] |= 0x00000080u;
}
void Container::clear_has_authfail() {
  _has_bits_[0] &= ~0x00000080u;
}
void Container::clear_authfail() {
  if (authfail_ != NULL) authfail_->::headers::AuthenticateFailure::Clear();
  clear_has_authfail();
}
const ::headers::AuthenticateFailure& Container::authfail() const {
  // @@protoc_insertion_point(field_get:headers.Container.authFail)
  return authfail_ != NULL ? *authfail_
                         : *::headers::AuthenticateFailure::internal_default_instance();
}
::headers::AuthenticateFailure* Container::mutable_authfail() {
  set_has_authfail();
  if (authfail_ == NULL) {
    authfail_ = new ::headers::AuthenticateFailure;
  }
  // @@protoc_insertion_point(field_mutable:headers.Container.authFail)
  return authfail_;
}
::headers::AuthenticateFailure* Container::release_authfail() {
  // @@protoc_insertion_point(field_release:headers.Container.authFail)
  clear_has_authfail();
  ::headers::AuthenticateFailure* temp = authfail_;
  authfail_ = NULL;
  return temp;
}
void Container::set_allocated_authfail(::headers::AuthenticateFailure* authfail) {
  delete authfail_;
  authfail_ = authfail;
  if (authfail) {
    set_has_authfail();
  } else {
    clear_has_authfail();
  }
  // @@protoc_insertion_point(field_set_allocated:headers.Container.authFail)
}

// optional .headers.AuthenticateSuccess authSuccess = 9;
bool Container::has_authsuccess() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void Container::set_has_authsuccess() {
  _has_bits_[0] |= 0x00000100u;
}
void Container::clear_has_authsuccess() {
  _has_bits_[0] &= ~0x00000100u;
}
void Container::clear_authsuccess() {
  if (authsuccess_ != NULL) authsuccess_->::headers::AuthenticateSuccess::Clear();
  clear_has_authsuccess();
}
const ::headers::AuthenticateSuccess& Container::authsuccess() const {
  // @@protoc_insertion_point(field_get:headers.Container.authSuccess)
  return authsuccess_ != NULL ? *authsuccess_
                         : *::headers::AuthenticateSuccess::internal_default_instance();
}
::headers::AuthenticateSuccess* Container::mutable_authsuccess() {
  set_has_authsuccess();
  if (authsuccess_ == NULL) {
    authsuccess_ = new ::headers::AuthenticateSuccess;
  }
  // @@protoc_insertion_point(field_mutable:headers.Container.authSuccess)
  return authsuccess_;
}
::headers::AuthenticateSuccess* Container::release_authsuccess() {
  // @@protoc_insertion_point(field_release:headers.Container.authSuccess)
  clear_has_authsuccess();
  ::headers::AuthenticateSuccess* temp = authsuccess_;
  authsuccess_ = NULL;
  return temp;
}
void Container::set_allocated_authsuccess(::headers::AuthenticateSuccess* authsuccess) {
  delete authsuccess_;
  authsuccess_ = authsuccess;
  if (authsuccess) {
    set_has_authsuccess();
  } else {
    clear_has_authsuccess();
  }
  // @@protoc_insertion_point(field_set_allocated:headers.Container.authSuccess)
}

inline const Container* Container::internal_default_instance() {
  return &Container_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace headers

// @@protoc_insertion_point(global_scope)
